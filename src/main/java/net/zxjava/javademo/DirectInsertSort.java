package net.zxjava.javademo;

import java.util.Arrays;

/**
 * 直接插入排序（从后向前找到合适位置后插入） 思想：每步将一个待排序的记录，按其顺序码大小插入到前面已经排序的字序列的合适位置，直到全部插入排序完为止。
 * 关键问题：在前面已经排好序的序列中找到合适的插入位置。
 * 
 * 小规模数据或基本有序时十分高效
 */
public class DirectInsertSort {

	public static void main(String[] args) {
		int[] a = { 49, 38, 65, 97, 76, 13, 27, 49, 78, 34, 12, 64, 1 };
		System.out.println("排序之前：");
		System.out.println(Arrays.toString(a));
		// 直接插入排序
		for (int i = 1; i < a.length; i++) {
			System.out.println("i=" + i);
			// 待插入元素
			int temp = a[i];
			int j;
			for (j = i - 1; j >= 0; j--) {
				// 将大于temp的往后移动一位
				if (a[j] > temp) {
					a[j + 1] = a[j];
					System.out.println("\t" + Arrays.toString(a));
				} else {
					break;
				}
			}
			a[j + 1] = temp;
			System.out.println("\t\t" + Arrays.toString(a));
		}
		System.out.println();
		System.out.println("排序之后：");
		for (int i = 0; i < a.length; i++) {
			System.out.print(a[i] + " ");
		}
	}
}
/**
 * 排序之前： [49, 38, 65, 97, 76, 13, 27, 49, 78, 34, 12, 64, 1] i=1 [49, 49, 65,
 * 97, 76, 13, 27, 49, 78, 34, 12, 64, 1] [38, 49, 65, 97, 76, 13, 27, 49, 78,
 * 34, 12, 64, 1] i=2 [38, 49, 65, 97, 76, 13, 27, 49, 78, 34, 12, 64, 1] i=3
 * [38, 49, 65, 97, 76, 13, 27, 49, 78, 34, 12, 64, 1] i=4 [38, 49, 65, 97, 97,
 * 13, 27, 49, 78, 34, 12, 64, 1] [38, 49, 65, 76, 97, 13, 27, 49, 78, 34, 12,
 * 64, 1] i=5 [38, 49, 65, 76, 97, 97, 27, 49, 78, 34, 12, 64, 1] [38, 49, 65,
 * 76, 76, 97, 27, 49, 78, 34, 12, 64, 1] [38, 49, 65, 65, 76, 97, 27, 49, 78,
 * 34, 12, 64, 1] [38, 49, 49, 65, 76, 97, 27, 49, 78, 34, 12, 64, 1] [38, 38,
 * 49, 65, 76, 97, 27, 49, 78, 34, 12, 64, 1] [13, 38, 49, 65, 76, 97, 27, 49,
 * 78, 34, 12, 64, 1] i=6 [13, 38, 49, 65, 76, 97, 97, 49, 78, 34, 12, 64, 1]
 * [13, 38, 49, 65, 76, 76, 97, 49, 78, 34, 12, 64, 1] [13, 38, 49, 65, 65, 76,
 * 97, 49, 78, 34, 12, 64, 1] [13, 38, 49, 49, 65, 76, 97, 49, 78, 34, 12, 64,
 * 1] [13, 38, 38, 49, 65, 76, 97, 49, 78, 34, 12, 64, 1] [13, 27, 38, 49, 65,
 * 76, 97, 49, 78, 34, 12, 64, 1] i=7 [13, 27, 38, 49, 65, 76, 97, 97, 78, 34,
 * 12, 64, 1] [13, 27, 38, 49, 65, 76, 76, 97, 78, 34, 12, 64, 1] [13, 27, 38,
 * 49, 65, 65, 76, 97, 78, 34, 12, 64, 1] [13, 27, 38, 49, 49, 65, 76, 97, 78,
 * 34, 12, 64, 1] i=8 [13, 27, 38, 49, 49, 65, 76, 97, 97, 34, 12, 64, 1] [13,
 * 27, 38, 49, 49, 65, 76, 78, 97, 34, 12, 64, 1] i=9 [13, 27, 38, 49, 49, 65,
 * 76, 78, 97, 97, 12, 64, 1] [13, 27, 38, 49, 49, 65, 76, 78, 78, 97, 12, 64,
 * 1] [13, 27, 38, 49, 49, 65, 76, 76, 78, 97, 12, 64, 1] [13, 27, 38, 49, 49,
 * 65, 65, 76, 78, 97, 12, 64, 1] [13, 27, 38, 49, 49, 49, 65, 76, 78, 97, 12,
 * 64, 1] [13, 27, 38, 49, 49, 49, 65, 76, 78, 97, 12, 64, 1] [13, 27, 38, 38,
 * 49, 49, 65, 76, 78, 97, 12, 64, 1] [13, 27, 34, 38, 49, 49, 65, 76, 78, 97,
 * 12, 64, 1] i=10 [13, 27, 34, 38, 49, 49, 65, 76, 78, 97, 97, 64, 1] [13, 27,
 * 34, 38, 49, 49, 65, 76, 78, 78, 97, 64, 1] [13, 27, 34, 38, 49, 49, 65, 76,
 * 76, 78, 97, 64, 1] [13, 27, 34, 38, 49, 49, 65, 65, 76, 78, 97, 64, 1] [13,
 * 27, 34, 38, 49, 49, 49, 65, 76, 78, 97, 64, 1] [13, 27, 34, 38, 49, 49, 49,
 * 65, 76, 78, 97, 64, 1] [13, 27, 34, 38, 38, 49, 49, 65, 76, 78, 97, 64, 1]
 * [13, 27, 34, 34, 38, 49, 49, 65, 76, 78, 97, 64, 1] [13, 27, 27, 34, 38, 49,
 * 49, 65, 76, 78, 97, 64, 1] [13, 13, 27, 34, 38, 49, 49, 65, 76, 78, 97, 64,
 * 1] [12, 13, 27, 34, 38, 49, 49, 65, 76, 78, 97, 64, 1] i=11 [12, 13, 27, 34,
 * 38, 49, 49, 65, 76, 78, 97, 97, 1] [12, 13, 27, 34, 38, 49, 49, 65, 76, 78,
 * 78, 97, 1] [12, 13, 27, 34, 38, 49, 49, 65, 76, 76, 78, 97, 1] [12, 13, 27,
 * 34, 38, 49, 49, 65, 65, 76, 78, 97, 1] [12, 13, 27, 34, 38, 49, 49, 64, 65,
 * 76, 78, 97, 1] i=12 [12, 13, 27, 34, 38, 49, 49, 64, 65, 76, 78, 97, 97] [12,
 * 13, 27, 34, 38, 49, 49, 64, 65, 76, 78, 78, 97] [12, 13, 27, 34, 38, 49, 49,
 * 64, 65, 76, 76, 78, 97] [12, 13, 27, 34, 38, 49, 49, 64, 65, 65, 76, 78, 97]
 * [12, 13, 27, 34, 38, 49, 49, 64, 64, 65, 76, 78, 97] [12, 13, 27, 34, 38, 49,
 * 49, 49, 64, 65, 76, 78, 97] [12, 13, 27, 34, 38, 49, 49, 49, 64, 65, 76, 78,
 * 97] [12, 13, 27, 34, 38, 38, 49, 49, 64, 65, 76, 78, 97] [12, 13, 27, 34, 34,
 * 38, 49, 49, 64, 65, 76, 78, 97] [12, 13, 27, 27, 34, 38, 49, 49, 64, 65, 76,
 * 78, 97] [12, 13, 13, 27, 34, 38, 49, 49, 64, 65, 76, 78, 97] [12, 12, 13, 27,
 * 34, 38, 49, 49, 64, 65, 76, 78, 97] [1, 12, 13, 27, 34, 38, 49, 49, 64, 65,
 * 76, 78, 97]
 * 
 * 排序之后： 1 12 13 27 34 38 49 49 64 65 76 78 97
 */